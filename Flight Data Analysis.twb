<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2008' inline='true' name='federated.0mt1xg61njkdzj1f1si9b0cjc47a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2008' name='textscan.0mvsakx14qha0h17dq3xb0khu03l'>
            <connection class='textscan' directory='C:/github code/tableu' filename='2008.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0mvsakx14qha0h17dq3xb0khu03l' name='2008.csv' table='[2008#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='integer' name='DayofMonth' ordinal='2' />
            <column datatype='integer' name='DayOfWeek' ordinal='3' />
            <column datatype='integer' name='DepTime' ordinal='4' />
            <column datatype='integer' name='CRSDepTime' ordinal='5' />
            <column datatype='integer' name='ArrTime' ordinal='6' />
            <column datatype='integer' name='CRSArrTime' ordinal='7' />
            <column datatype='string' name='UniqueCarrier' ordinal='8' />
            <column datatype='integer' name='FlightNum' ordinal='9' />
            <column datatype='string' name='TailNum' ordinal='10' />
            <column datatype='integer' name='ActualElapsedTime' ordinal='11' />
            <column datatype='integer' name='CRSElapsedTime' ordinal='12' />
            <column datatype='integer' name='AirTime' ordinal='13' />
            <column datatype='integer' name='ArrDelay' ordinal='14' />
            <column datatype='integer' name='DepDelay' ordinal='15' />
            <column datatype='string' name='Origin' ordinal='16' />
            <column datatype='string' name='Dest' ordinal='17' />
            <column datatype='integer' name='Distance' ordinal='18' />
            <column datatype='integer' name='TaxiIn' ordinal='19' />
            <column datatype='integer' name='TaxiOut' ordinal='20' />
            <column datatype='integer' name='Cancelled' ordinal='21' />
            <column datatype='string' name='CancellationCode' ordinal='22' />
            <column datatype='integer' name='Diverted' ordinal='23' />
            <column datatype='string' name='CarrierDelay' ordinal='24' />
            <column datatype='string' name='WeatherDelay' ordinal='25' />
            <column datatype='string' name='NASDelay' ordinal='26' />
            <column datatype='string' name='SecurityDelay' ordinal='27' />
            <column datatype='string' name='LateAircraftDelay' ordinal='28' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayofMonth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayofMonth]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>DayofMonth</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayOfWeek</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayOfWeek]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>DayOfWeek</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>DepTime</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSDepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSDepTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CRSDepTime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>ArrTime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSArrTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CRSArrTime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UniqueCarrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UniqueCarrier]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>UniqueCarrier</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightNum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FlightNum]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>FlightNum</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TailNum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TailNum]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>TailNum</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActualElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActualElapsedTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>ActualElapsedTime</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSElapsedTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CRSElapsedTime</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AirTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>AirTime</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>ArrDelay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>DepDelay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Dest</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiIn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiIn]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>TaxiIn</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiOut</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiOut]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>TaxiOut</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CancellationCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CancellationCode]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CancellationCode</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CarrierDelay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CarrierDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CarrierDelay</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WeatherDelay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WeatherDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>WeatherDelay</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NASDelay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NASDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>NASDelay</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SecurityDelay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SecurityDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>SecurityDelay</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LateAircraftDelay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LateAircraftDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>LateAircraftDelay</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actual Elapsed Time' datatype='integer' name='[ActualElapsedTime]' role='measure' type='quantitative' />
      <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
      <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
      <column caption='Arr Time' datatype='integer' name='[ArrTime]' role='measure' type='quantitative' />
      <column caption='CRS Arr Time' datatype='integer' name='[CRSArrTime]' role='measure' type='quantitative' />
      <column caption='CRS Dep Time' datatype='integer' name='[CRSDepTime]' role='measure' type='quantitative' />
      <column caption='CRS Elapsed Time' datatype='integer' name='[CRSElapsedTime]' role='measure' type='quantitative' />
      <column caption='Cancellation Code' datatype='string' name='[CancellationCode]' role='dimension' type='nominal' />
      <column caption='Carrier Delay' datatype='string' name='[CarrierDelay]' role='dimension' type='nominal' />
      <column caption='Day Of Week' datatype='integer' name='[DayOfWeek]' role='dimension' type='quantitative' />
      <column caption='Dayof Month' datatype='integer' name='[DayofMonth]' role='dimension' type='quantitative' />
      <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
      <column caption='Dep Time' datatype='integer' name='[DepTime]' role='measure' type='quantitative' />
      <column caption='Flight Num' datatype='integer' name='[FlightNum]' role='dimension' type='ordinal' />
      <column caption='Late Aircraft Delay' datatype='string' name='[LateAircraftDelay]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='NAS Delay' datatype='string' name='[NASDelay]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Origin]' role='dimension' type='nominal' />
      <column caption='Security Delay' datatype='string' name='[SecurityDelay]' role='dimension' type='nominal' />
      <column caption='Tail Num' datatype='string' name='[TailNum]' role='dimension' type='nominal' />
      <column caption='Taxi In' datatype='integer' name='[TaxiIn]' role='measure' type='quantitative' />
      <column caption='Taxi Out' datatype='integer' name='[TaxiOut]' role='measure' type='quantitative' />
      <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
      <column caption='Weather Delay' datatype='string' name='[WeatherDelay]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.556319' measure-ordering='alphabetic' measure-percentage='0.443681' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Origin:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ADK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;COS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EGE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HLN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LRD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MKG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OME&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PSC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RSW&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TUP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BQN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CLD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FAT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GSO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LEX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MEI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MSY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PHX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RHI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SGF&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWF&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;YAK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ACK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BDL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BTR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CMH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DLH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FLL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GTR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ITH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LIH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PIT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ROA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SJC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TOL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AKN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BJI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CSG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GFK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HRL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KOA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LYH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MOB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OTH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PUB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SBA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SPI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TXK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ADQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BHM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BZN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CPR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EKO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FWA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HNL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JAX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LSE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MLB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ONT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SAN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SMF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BET&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BTV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CMI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DRO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FLO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GUC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ITO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LIT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MHT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OGG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PLN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ROC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SJT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TPA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BPT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CIC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DBQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FAI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IDA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LBB&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MDT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MSO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PHF&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RDU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SEA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WYS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AVL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BRO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CLE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FAY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GSP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;INL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LFT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MTJ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PIA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RIC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SGU&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;YKM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BOI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GPT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IAH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MCN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MRY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PDX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RDD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SCE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VPS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ACV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BFL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BUF&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CMX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DSM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FNT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HDN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IYK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LMT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OKC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PMD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ROW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SJU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BLI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CDV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CVG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EUG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GGG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HSV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KTN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MOD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OTZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PVD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SBN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SPS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TYR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BMI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CEC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CWA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EVV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GJT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HTS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LAN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MBS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MOT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OXR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PWM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SBP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SRQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TYS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ASE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DAY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EYW&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GRB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ICT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MSN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PFN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RDM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SDF&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WRG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ATW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BQK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CID&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DCA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FAR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ILM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LCH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MDW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MSP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RFD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SUX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;XNA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AEX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BIL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CAE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CRP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ELM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GCC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LWB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PSG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SAT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SMX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TVC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BGM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BUR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FSD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HHH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LNK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MKE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OMA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PNS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RST&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SLC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TUL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ABQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AVP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BRW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CLL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DHN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FCA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IPL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MFE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MYR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PIH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RKS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SHV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TEX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;YUM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AMA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BNA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DAB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EWN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GNV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LAS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MCI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MQT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PBI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RAP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SCC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VLD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AGS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BIS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CAK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CRW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ELP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GEG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HPN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JNU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LWS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MLU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ORF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PSP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SAV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TWF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ABY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BTM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DLG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FLG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GTF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ISP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LGB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MFR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OAJ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PIR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RNO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SIT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TLH&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Avg dep delay with month carrier' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Unique Carrier' />
        <param name='target' value='Avg dep delay with month carrier' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg delay by carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.0mt1xg61njkdzj1f1si9b0cjc47a' />
          </datasources>
          <datasource-dependencies datasource='federated.0mt1xg61njkdzj1f1si9b0cjc47a'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:DepDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:UniqueCarrier:nk]</rows>
        <cols>([federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk] + [federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:DepDelay:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Avg dep delay with month carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.0mt1xg61njkdzj1f1si9b0cjc47a' />
          </datasources>
          <datasource-dependencies datasource='federated.0mt1xg61njkdzj1f1si9b0cjc47a'>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:UniqueCarrier:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:DepDelay:qk]</rows>
        <cols>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delays by origin &amp; month'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.0mt1xg61njkdzj1f1si9b0cjc47a' />
          </datasources>
          <datasource-dependencies datasource='federated.0mt1xg61njkdzj1f1si9b0cjc47a'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Origin]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]' included-values='in-range'>
            <min>31.199999999999999</min>
            <max>112.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:DepDelay:qk]' included-values='in-range'>
            <min>40.5</min>
            <max>117.0</max>
          </filter>
          <filter class='categorical' column='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]'>
            <groupfilter function='level-members' level='[none:Origin:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]</column>
            <column>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:DepDelay:qk]</column>
            <column>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:DepDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk] + [federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:DepDelay:qk])</rows>
        <cols>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.0mt1xg61njkdzj1f1si9b0cjc47a' />
          </datasources>
          <datasource-dependencies datasource='federated.0mt1xg61njkdzj1f1si9b0cjc47a'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin]' role='dimension' type='nominal' />
            <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]' />
              <text column='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]</rows>
        <cols>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:UniqueCarrier:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='avg delays by origin'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.0mt1xg61njkdzj1f1si9b0cjc47a' />
          </datasources>
          <datasource-dependencies datasource='federated.0mt1xg61njkdzj1f1si9b0cjc47a'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </rows>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:DepDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]</rows>
        <cols>([federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk] + [federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:DepDelay:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Avg dep delay with month carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:UniqueCarrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:FlightNum:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39E9C238-0B76-4D76-8F1F-E3FBFC9E6602}' />
    </window>
    <window class='worksheet' name='Delays by origin &amp; month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Month:qk]</field>
            <field>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC70D4F2-40A0-408E-A317-8C5C38DC96A3}' />
    </window>
    <window class='worksheet' name='avg delays by origin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{37741F3A-F125-416D-9F2F-9F63B8EAE28D}' />
    </window>
    <window class='worksheet' name='Avg delay by carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{35306818-0FD2-4951-BB26-4107A5D7E45A}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[avg:ArrDelay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:Origin:nk]</field>
            <field>[federated.0mt1xg61njkdzj1f1si9b0cjc47a].[none:UniqueCarrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E84208E-7A0F-4983-A2F6-407F908CAEA7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg delay by carrier' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Avg dep delay with month carrier' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delays by origin &amp; month' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='avg delays by origin' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
